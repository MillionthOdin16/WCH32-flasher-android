use wchisp::protocol::Command;

#[test]
fn test_identify_command() {
    let cmd = Command::identify(0x12, 0x34);
    let raw = cmd.into_raw().unwrap();
    assert_eq!(
        raw,
        vec![
            0xa1, 0x12, 0x00, 0x12, 0x34, 0x4d, 0x43, 0x55, 0x20, 0x49, 0x53, 0x50, 0x20, 0x26, 0x20,
            0x57, 0x43, 0x48, 0x2e, 0x43, 0x4e
        ]
    );
}

#[test]
fn test_erase_command() {
    let cmd = Command::erase(8);
    let raw = cmd.into_raw().unwrap();
    assert_eq!(raw, vec![0xa4, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00]);
}

#[test]
fn test_program_command() {
    let cmd = Command::program(0x0800_0000, 0xab, vec![1, 2, 3, 4]);
    let raw = cmd.into_raw().unwrap();
    assert_eq!(
        raw,
        vec![0xa5, 0x09, 0x00, 0x00, 0x00, 0x00, 0x08, 0xab, 0x01, 0x02, 0x03, 0x04]
    );
}
